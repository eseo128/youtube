{"version":3,"sources":["components/video_list/video_list.module.css","components/video_item/video_item.module.css","components/search_header/search_header.module.css","app.module.css","components/search_header/search_header.jsx","components/video_detail/video_detail.jsx","components/video_item/video_item.jsx","components/video_list/video_list.jsx","app.jsx","reportWebVitals.js","service/youtube.js","index.js","components/video_detail/video_detail.module.css"],"names":["module","exports","SearchHeader","memo","onSearch","inputRef","useRef","handleSearch","value","current","className","styles","header","logo","img","src","alt","title","ref","input","type","placeholder","onKeyPress","event","key","button","onClick","buttonImg","VideoDetail","video","snippet","detail","width","height","id","frameBorder","allowFullScreen","channelTitle","description","VideoItem","onVideoClick","displayType","display","list","grid","container","thumbnail","thumbnails","medium","url","metadata","channel","VideoList","videos","map","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","search","useCallback","query","then","useEffect","mostPopular","app","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Youtube","httpClient","this","a","get","params","part","chart","maxResults","response","data","items","q","item","videoId","axios","create","baseURL","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04bbb8b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__179eI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__2fv_c\",\"grid\":\"video_item_grid__3JeCy\",\"list\":\"video_item_list__3Jh_U\",\"video\":\"video_item_video__2RpA-\",\"thumbnail\":\"video_item_thumbnail__3B1bw\",\"metadata\":\"video_item_metadata__12BH5\",\"title\":\"video_item_title__A6eJ1\",\"channel\":\"video_item_channel__1Mths\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__3HKb_\",\"logo\":\"search_header_logo__A4OR7\",\"title\":\"search_header_title__3NoRY\",\"input\":\"search_header_input__yPYL7\",\"button\":\"search_header_button__2QsXM\",\"buttonImg\":\"search_header_buttonImg__3nYZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3WKke\",\"content\":\"app_content__2VDMV\",\"detail\":\"app_detail__13csL\",\"list\":\"app_list__2SWVs\"};","import styles from './search_header.module.css';\r\nimport React, { memo, useRef } from 'react';\r\n\r\n\r\nconst SearchHeader = memo(({ onSearch }) => {\r\n        const inputRef = useRef(); //메모\r\n        const handleSearch = () => {\r\n            const value = inputRef.current.value;\r\n            //console.log(value); //검색단어 받아오는지 확인\r\n        \r\n            onSearch(value);\r\n            //검색하는 것을 props로 받아오기\r\n        }\r\n        const onClick = () => {\r\n            //console.log('onClick') 확인해보기\r\n            handleSearch();\r\n        }\r\n\r\n    const onKeyPress = (event) => {\r\n        //console.log('onKeyPress') 확인해보기\r\n        if (event.key === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n    \r\n        return (\r\n            <header className={styles.header}>\r\n                <div className={styles.logo}>\r\n                    <img className={styles.img} src=\"youtube/images/logo.png\" alt=\"logo\" />\r\n                    <h1 className={styles.title}>Youtube</h1>\r\n                </div>\r\n                <input ref={inputRef} className={styles.input} type=\"search\" placeholder=\"Search...\" onKeyPress={onKeyPress} />\r\n                <button className={styles.button} type=\"submit\" onClick={onClick}>\r\n                    <img className={styles.buttonImg} src=\"youtube/images/search.png\" alt=\"search\" />\r\n                </button>\r\n            </header>\r\n        )\r\n    }\r\n);\r\n\r\nexport default SearchHeader;","import React from 'react';\r\nimport styles from './video_detail.module.css'\r\n\r\nconst VideoDetail = ({video, video : { snippet } }) => (\r\n    <section className={styles.detail}>\r\n        <iframe\r\n            className={styles.video}\r\n            type=\"text/html\"\r\n            title=\"youtube video player\"\r\n            width=\"100%\"\r\n            height=\"500px\"\r\n            src={`https://www.youtube.com/embed/${video.id}`}\r\n            frameBorder=\"0\"\r\n            allowFullScreen>\r\n            </iframe>\r\n        <h2>{snippet.title}</h2>\r\n        <h3>{snippet.channelTitle}</h3>\r\n        <pre className={styles.description}>{snippet.description}</pre>\r\n    </section>\r\n    );\r\n\r\nexport default VideoDetail;","import React, { memo } from 'react';\r\nimport styles from './video_item.module.css';\r\n\r\nconst VideoItem = memo(\r\n    ({ video, video: { snippet }, onVideoClick, display }) => {\r\n        const displayType = display === 'list' ? styles.list : styles.grid;\r\n    \r\n        return (\r\n            <li\r\n                className={`${styles.container} ${displayType}`}\r\n                onClick={() => onVideoClick(video)}>\r\n                <div className={styles.video}>\r\n                    <img\r\n                        className={styles.thumbnail} src={snippet.thumbnails.medium.url}\r\n                        alt=\"video thumbnail\"\r\n                    />\r\n                    <div className={styles.metadata}>\r\n                        <p className={styles.title}>{snippet.title}</p>\r\n                        <p className={styles.channel}>{snippet.channelTitle}</p>\r\n                    </div>\r\n                </div>\r\n        \r\n        \r\n            </li>\r\n        )\r\n    }\r\n);\r\n\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from '../video_item/video_item';\r\nimport styles from './video_list.module.css';\r\n\r\nconst VideoList = ({videos, onVideoClick, display}) => (\r\n    <ul className={styles.videos}>\r\n        {videos.map(video => (\r\n            <VideoItem\r\n                key={video.id}\r\n                video={video}\r\n                onVideoClick={onVideoClick}\r\n                display={display}    \r\n            />\r\n        ))}\r\n        </ul>\r\n    );\r\n\r\nexport default VideoList;","import React, { useCallback, useEffect, useState } from 'react';\nimport styles from './app.module.css';\nimport SearchHeader from './components/search_header/search_header';\nimport VideoDetail from './components/video_detail/video_detail';\nimport VideoList from './components/video_list/video_list';\n\nfunction App({youtube}) {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const selectVideo = (video) => {\n    setSelectedVideo(video);\n  }\n\n  const search = useCallback(\n    query => {\n      setSelectedVideo(null); // 동영상을 선택해서 보고있을 때 화면에서 또 다른 검색하면 이전 리스트 모양으로 돌아가기\n      youtube\n        .search(query)//\n        .then(videos => {\n          setVideos(videos);\n        });\n    }, [youtube]);\n\n  useEffect(() => {\n    youtube\n      .mostPopular()//\n      .then(videos => setVideos(videos));\n  }, [youtube]);\n  return (\n    <div className={styles.app}>\n      <SearchHeader onSearch={search} />\n      <section className={styles.content}>\n        {selectedVideo && (\n        <div className={styles.detail}>\n          <VideoDetail video={selectedVideo} />\n        </div>\n          )}\n        <div className={styles.list}>\n          <VideoList videos={videos} onVideoClick={selectVideo} display={selectedVideo ? 'list' : 'grid'}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","class Youtube {\r\n    constructor(httpClient) {\r\n        this.youtube = httpClient;\r\n        \r\n    }\r\n    async mostPopular() {\r\n        const response = await this.youtube.get('videos', {\r\n            params: {\r\n                part: 'snippet',\r\n                chart: 'mostPopular',\r\n                maxResults: 25,\r\n            },\r\n        });\r\n        return response.data.items;\r\n    }\r\n\r\n    async search(query) {\r\n        const response = await this.youtube.get('search', {\r\n            params: {\r\n                part: 'snippet',\r\n                maxResults: 25,\r\n                type: 'video',\r\n                q: query,\r\n            },\r\n        });\r\n        \r\n        return response.data.items.map(item => ({ ...item, id: item.id.videoId }));\r\n    }\r\n}\r\n\r\nexport default Youtube;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\nimport Youtube from './service/youtube';\nimport axios from 'axios';\n\nconst httpClient = axios.create({\n    baseURL: 'https://www.googleapis.com/youtube/v3',\n    params:{key: process.env.REACT_APP_YOUTUBE_API_KEY},\n  });\n\n\nconst youtube = new Youtube(httpClient);\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"video_detail_detail__3k8f-\",\"description\":\"video_detail_description__1UW40\"};"],"sourceRoot":""}